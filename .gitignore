uv.lock

# OS X
.DS_Store

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Folders
# data/

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
mlruns/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Pycharm Project Settings
.idea/

# Rope project settings
.ropeproject

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# R project files
**.Rproj
*.utf8.md
*.knit.md
.Rproj.user

# VS code configuration
.vscode
.history
check_spark_env.sh

notebooks/logs/

coverage.lcov
.coverage
src/insurance/data_preprocessing_old.py

**/*.whl

.databricks

test-reports
.coverage
# Ignore test artifacts and temporary files from the MLOps course
test-mlops_course/

# Databricks-specific files
.dbx/
databricks/
workspace/

# MLflow artifacts and experiment tracking
mlruns/
mlflow.db

# Logs and debug
logs/
*.log
debug.log

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
